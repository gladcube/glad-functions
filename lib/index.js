// Generated by LiveScript 1.5.0
(function(){
  var applicative, async, combinator, control, flow, func, list, obj, option, str, GladFunctions, this$ = this;
  applicative = require('./applicative');
  async = require('./async');
  combinator = require('./combinator');
  control = require('./control');
  flow = require('./flow');
  func = require('./func');
  list = require('./list');
  obj = require('./obj');
  option = require('./option');
  str = require('./str');
  module.exports = (function(it){
    return importAll$(it, func);
  })(
  (function(it){
    return importAll$(it, combinator);
  })(
  (function(it){
    return importAll$(it, applicative);
  })(
  (function(it){
    return importAll$(it, option);
  })(
  (function(it){
    return importAll$(it, flow);
  })(
  (function(it){
    return importAll$(it, async);
  })(
  (function(it){
    return importAll$(it, control);
  })(
  (function(it){
    return importAll$(it, list);
  })(
  (function(it){
    return importAll$(it, str);
  })(
  (function(it){
    return importAll$(it, obj);
  })(
  new (GladFunctions = (function(){
    GladFunctions.displayName = 'GladFunctions';
    var prototype = GladFunctions.prototype, constructor = GladFunctions;
    GladFunctions.prototype.Applicative = applicative;
    GladFunctions.prototype.Async = async;
    GladFunctions.prototype.Combinator = combinator;
    GladFunctions.prototype.Control = control;
    GladFunctions.prototype.Flow = flow;
    GladFunctions.prototype.Func = func;
    GladFunctions.prototype.List = list;
    GladFunctions.prototype.Obj = obj.merge(obj.get('Obj')(
    require('prelude-ls')), obj);
    GladFunctions.prototype.Option = option;
    GladFunctions.prototype.Str = str;
    function GladFunctions(){}
    return GladFunctions;
  }()))))))))))));
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
