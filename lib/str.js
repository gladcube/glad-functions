// Generated by LiveScript 1.5.0
(function(){
  var let_, flip, Str, slice$ = [].slice;
  let_ = require('./obj').let_;
  flip = require('prelude-ls').flip;
  module.exports = new (Str = (function(){
    Str.displayName = 'Str';
    var match_, prototype = Str.prototype, constructor = Str;
    Str.prototype.match_ = match_ = flip(partialize$.apply(Str, [let_, [void 8, 'match', void 8], [0, 2]]));
    Str.prototype.match = match_;
    function Str(){}
    return Str;
  }()));
  function partialize$(f, args, where){
    var context = this;
    return function(){
      var params = slice$.call(arguments), i,
          len = params.length, wlen = where.length,
          ta = args ? args.concat() : [], tw = where ? where.concat() : [];
      for(i = 0; i < len; ++i) { ta[tw[0]] = params[i]; tw.shift(); }
      return len < wlen && len ?
        partialize$.apply(context, [f, ta, tw]) : f.apply(context, ta);
    };
  }
}).call(this);
